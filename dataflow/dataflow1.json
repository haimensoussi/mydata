{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Clients",
						"type": "DatasetReference"
					},
					"name": "Client"
				},
				{
					"dataset": {
						"referenceName": "DimClients",
						"type": "DatasetReference"
					},
					"name": "DimClients"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimClients",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DimClients",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "dontexist"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "exists1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CODE_CLIENT as string,",
				"          SOCIETE as string,",
				"          ADRESSE as string,",
				"          VILLE as string,",
				"          CODE_POSTAL as string,",
				"          PAYS as string,",
				"          TELEPHONE as string,",
				"          FAX as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Client",
				"source(output(",
				"          ClientKey as integer,",
				"          CODE_CLIENT as string,",
				"          SOCIETE as string,",
				"          ADRESSE as string,",
				"          VILLE as string,",
				"          CODE_POSTAL as string,",
				"          PAYS as string,",
				"          TELEPHONE as string,",
				"          FAX as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimClients",
				"Client, DimClients exists(Client@CODE_CLIENT == DimClients@CODE_CLIENT,",
				"     negate:true,",
				"     broadcast: 'auto')~> dontexist",
				"dontexist keyGenerate(output(ClientKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"Client, DimClients exists(Client@CODE_CLIENT == DimClients@CODE_CLIENT,",
				"     negate:false,",
				"     broadcast: 'auto')~> exists1",
				"exists1 alterRow(updateIf(1==1)) ~> alterRow1",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ClientKey as integer,",
				"          CODE_CLIENT as string,",
				"          SOCIETE as string,",
				"          ADRESSE as string,",
				"          VILLE as string,",
				"          CODE_POSTAL as string,",
				"          PAYS as string,",
				"          TELEPHONE as string,",
				"          FAX as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CODE_CLIENT,",
				"          SOCIETE,",
				"          ADRESSE,",
				"          VILLE,",
				"          CODE_POSTAL,",
				"          PAYS,",
				"          TELEPHONE,",
				"          FAX",
				"     )) ~> sink1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ClientKey as integer,",
				"          CODE_CLIENT as string,",
				"          SOCIETE as string,",
				"          ADRESSE as string,",
				"          VILLE as string,",
				"          CODE_POSTAL as string,",
				"          PAYS as string,",
				"          TELEPHONE as string,",
				"          FAX as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['CODE_CLIENT'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CODE_CLIENT,",
				"          SOCIETE,",
				"          ADRESSE,",
				"          VILLE,",
				"          CODE_POSTAL,",
				"          PAYS,",
				"          TELEPHONE,",
				"          FAX",
				"     )) ~> sink2"
			]
		}
	}
}