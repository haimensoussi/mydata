{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "devopsdata"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"linkdw_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkdw'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GetData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stop",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 3
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/run data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "adf",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkdw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('linkdw_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clients')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODE_CLIENT",
						"type": "char"
					},
					{
						"name": "SOCIETE",
						"type": "nvarchar"
					},
					{
						"name": "ADRESSE",
						"type": "nvarchar"
					},
					{
						"name": "VILLE",
						"type": "varchar"
					},
					{
						"name": "CODE_POSTAL",
						"type": "varchar"
					},
					{
						"name": "PAYS",
						"type": "varchar"
					},
					{
						"name": "TELEPHONE",
						"type": "varchar"
					},
					{
						"name": "FAX",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "stagiaire",
					"table": "CLIENTS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimClients')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkdw",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CODE_CLIENT",
						"type": "char"
					},
					{
						"name": "SOCIETE",
						"type": "nvarchar"
					},
					{
						"name": "ADRESSE",
						"type": "nvarchar"
					},
					{
						"name": "VILLE",
						"type": "varchar"
					},
					{
						"name": "CODE_POSTAL",
						"type": "varchar"
					},
					{
						"name": "PAYS",
						"type": "varchar"
					},
					{
						"name": "TELEPHONE",
						"type": "varchar"
					},
					{
						"name": "FAX",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimCLIENTS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkdw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Clients",
								"type": "DatasetReference"
							},
							"name": "Client"
						},
						{
							"dataset": {
								"referenceName": "DimClients",
								"type": "DatasetReference"
							},
							"name": "DimClients"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimClients",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DimClients",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "dontexist"
						},
						{
							"name": "surrogateKey1"
						},
						{
							"name": "exists1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CODE_CLIENT as string,",
						"          SOCIETE as string,",
						"          ADRESSE as string,",
						"          VILLE as string,",
						"          CODE_POSTAL as string,",
						"          PAYS as string,",
						"          TELEPHONE as string,",
						"          FAX as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Client",
						"source(output(",
						"          ClientKey as integer,",
						"          CODE_CLIENT as string,",
						"          SOCIETE as string,",
						"          ADRESSE as string,",
						"          VILLE as string,",
						"          CODE_POSTAL as string,",
						"          PAYS as string,",
						"          TELEPHONE as string,",
						"          FAX as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimClients",
						"Client, DimClients exists(Client@CODE_CLIENT == DimClients@CODE_CLIENT,",
						"     negate:true,",
						"     broadcast: 'auto')~> dontexist",
						"dontexist keyGenerate(output(ClientKey as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"Client, DimClients exists(Client@CODE_CLIENT == DimClients@CODE_CLIENT,",
						"     negate:false,",
						"     broadcast: 'auto')~> exists1",
						"exists1 alterRow(updateIf(1==1)) ~> alterRow1",
						"surrogateKey1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ClientKey as integer,",
						"          CODE_CLIENT as string,",
						"          SOCIETE as string,",
						"          ADRESSE as string,",
						"          VILLE as string,",
						"          CODE_POSTAL as string,",
						"          PAYS as string,",
						"          TELEPHONE as string,",
						"          FAX as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CODE_CLIENT,",
						"          SOCIETE,",
						"          ADRESSE,",
						"          VILLE,",
						"          CODE_POSTAL,",
						"          PAYS,",
						"          TELEPHONE,",
						"          FAX",
						"     )) ~> sink1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ClientKey as integer,",
						"          CODE_CLIENT as string,",
						"          SOCIETE as string,",
						"          ADRESSE as string,",
						"          VILLE as string,",
						"          CODE_POSTAL as string,",
						"          PAYS as string,",
						"          TELEPHONE as string,",
						"          FAX as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['CODE_CLIENT'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CODE_CLIENT,",
						"          SOCIETE,",
						"          ADRESSE,",
						"          VILLE,",
						"          CODE_POSTAL,",
						"          PAYS,",
						"          TELEPHONE,",
						"          FAX",
						"     )) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Clients')]",
				"[concat(variables('factoryId'), '/datasets/DimClients')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimclients')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DimClients",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Client": {},
									"DimClients": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImpDw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ImDimClients",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "dimclients",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DimEmpl",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ImDimClients",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "GetData",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DimProduct",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DimEmpl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "run data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/dimclients')]",
				"[concat(variables('factoryId'), '/pipelines/GetData')]",
				"[concat(variables('factoryId'), '/pipelines/run data')]"
			]
		}
	]
}